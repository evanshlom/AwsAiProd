{
  "Comment": "Simplified LLM Application Pipeline",
  "StartAt": "DeployInfrastructure",
  "States": {
    "DeployInfrastructure": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "deploy-infrastructure-function",
        "Payload": {
          "accountId.$": "$$.Execution.Input.accountId",
          "action": "deploy"
        }
      },
      "ResultPath": "$.infrastructure",
      "Next": "StartFineTuning"
    },
    "StartFineTuning": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "create-sagemaker-pipeline",
        "Payload": {
          "accountId.$": "$$.Execution.Input.accountId",
          "timestamp.$": "$$.Execution.StartTime"
        }
      },
      "ResultPath": "$.fineTuningJob",
      "Next": "WaitForFineTuning"
    },
    "WaitForFineTuning": {
      "Type": "Wait",
      "Seconds": 300,
      "Next": "CheckFineTuningStatus"
    },
    "CheckFineTuningStatus": {
      "Type": "Task", 
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "check-fine-tuning-status",
        "Payload": {
          "jobArn.$": "$.fineTuningJob.Payload.jobArn"
        }
      },
      "ResultPath": "$.jobStatus",
      "Next": "IsFineTuningComplete"
    },
    "IsFineTuningComplete": {
      "Type": "Choice",
      "Choices": [{
        "Variable": "$.jobStatus.Payload.status",
        "StringEquals": "Completed",
        "Next": "EvaluateModel"
      }, {
        "Variable": "$.jobStatus.Payload.status", 
        "StringEquals": "Failed",
        "Next": "FineTuningFailed"
      }],
      "Default": "WaitForFineTuning"
    },
    "EvaluateModel": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "evaluate-model-function",
        "Payload": {
          "modelId.$": "$.jobStatus.Payload.customModelArn",
          "testPrompts": [
            "What events happen at Allegiant Stadium?",
            "Tell me about pool parties in Vegas",
            "Plan a budget weekend trip"
          ]
        }
      },
      "ResultPath": "$.evaluationResult",
      "Next": "CheckEvaluation"
    },
    "CheckEvaluation": {
      "Type": "Choice",
      "Choices": [{
        "Variable": "$.evaluationResult.Payload.passed",
        "BooleanEquals": true,
        "Next": "UpdateModelInProduction"
      }],
      "Default": "EvaluationFailed"
    },
    "UpdateModelInProduction": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "deploy-infrastructure-function",
        "Payload": {
          "accountId.$": "$$.Execution.Input.accountId",
          "action": "update",
          "modelId.$": "$.jobStatus.Payload.customModelArn"
        }
      },
      "ResultPath": "$.updateResult",
      "Next": "DeploymentComplete"
    },
    "DeploymentComplete": {
      "Type": "Pass",
      "Result": "Deployment successful with fine-tuned model",
      "End": true
    },
    "FineTuningFailed": {
      "Type": "Fail",
      "Cause": "Fine-tuning job failed"
    },
    "EvaluationFailed": {
      "Type": "Fail", 
      "Cause": "Model evaluation did not pass"
    }
  }
}